pipeline {
    agent any

    environment {
        HEROKU_API_KEY = credentials('HEROKU_API_KEY')
        HEROKU_APP_NAME = 'your-heroku-app-name'  // Remplacez par le nom de votre application Heroku
    }

    stages {
        stage('Checkout') {
            steps {
                // Récupérer le code du dépôt
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                // Installer les dépendances Python
                sh 'python -m pip install --upgrade pip'
                sh 'pip install -r requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                // Exécuter les tests unitaires
                sh 'python -m unittest discover -s tests'
            }
        }
        stage('Build Frontend') {
            steps {
                // Compiler les fichiers statiques si nécessaire (ex : utiliser npm pour construire)
                // Pour cet exemple, nous n'avons pas de build process spécifique pour le frontend
                echo 'Building frontend...'
            }
        }
        stage('Deploy to Heroku') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Configurer Heroku
                    sh 'git remote add heroku https://git.heroku.com/${HEROKU_APP_NAME}.git || true'
                    // Déployer l'application sur Heroku
                    sh 'git push heroku main'
                }
            }
        }
    }
    post {
        always {
            // Archiver les résultats des tests, etc.
            junit '**/test-reports/*.xml'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
